<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.health.mapper.MemberMapper" >

	<!-- 회원가입 -->
	<insert id="addMember" parameterType="Member">
		INSERT INTO user (userName, phone1, phone2, phone3, gender, age, regDate, FK_user_point)
		VALUES(#{userName}, #{phone1}, #{phone2}, #{phone3},
		#{gender}, #{age}, SYSDATE(), #{FK_user_point})
		<!-- 위의 쿼리에서 user테이블에 데이터가 담기면, 자동으로 부여된 userNo를 불러와서 이후에 쿼리를 다시 실행되는 구문 -->
		   <selectKey keyProperty="userNo" resultType="int" order="AFTER">
		        SELECT LAST_INSERT_ID() AS userNo
		   </selectKey>
	</insert>	  
	
	<insert id="addId" parameterType="Member">
		INSERT INTO id (FK_id_user, id, pw, authority)
		VALUES (#{userNo}, #{id}, #{pw}, #{authority} )
	</insert>
	  
	<!-- 로그인 중인 사용자의 아이디 기반으로 사용자 정보 조회 -->
	<select id="getMember" resultType="Member">
		SELECT * 
		FROM id i
		left JOIN user u
		on i.FK_id_user = u.userNo
		WHERE i.id = #{id}
	</select>
	
	<!-- 회원 정보 수정 -->
	<!-- id 테이블에서 id에 해당하는 비밀번호 조회하여 일치시에만 수정 허용 -->
	<select id="memberPwCheck" resultType="String">
		SELECT
			pw
		From id
		WHERE id = #{id}
	</select>
	
	<!-- 로그인 중인 id를 기반으로 사용자의 userNo 조회-->
	<!-- 해당 userNo를 통해 회원 정보 수정 -->
	<update id="updateMember" parameterType="Member">
		UPDATE user
		SET age = #{age}, phone1 = #{phone1}, phone2 = #{phone2}, phone3 = #{phone3},
			FK_user_point = #{FK_user_point}
		WHERE userNo = (SELECT FK_id_user FROM id WHERE id = #{id});
	</update>
	
	<update id="updateMemberPw" parameterType="Member">
		UPDATE id
		SET pw=#{pw}
		WHERE id=#{id}
	</update>
</mapper>